node {
   def tag=""
   stage('Clean Slate'){
       sh "rm -rf app"
       sh "rm -rf ops"
       sh "mkdir app"
       sh "mkdir ops"
   }
   
   stage('Git Checkout') {
     dir ('app'){
         git branch: "stage", 
          credentialsId:"af539a9b-b67e-41d7-9179-5519fee65c6d", 
          url: "https://github.com/rattisyam/AppRepository.git"
    
         tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
     }
    
   }
   stage('Build') {
       dir('app'){
           sh 'npm install'
       }
    }
    
    stage('Test') {
        dir('app'){
            sh 'npm test'
        }
   }
   
   stage('Docker Image') {
        def dockerobject = docker.build("onboard.azurecr.io/gitopsnjs:s-${tag}","app/")
        
        docker.withRegistry( "https://onboard.azurecr.io/gitopsnjs:s-${tag}", "gitopsacr" ) {
        dockerobject.push()
     }
   }
   
   
   stage('Update GitOps Stage'){
       withCredentials([usernamePassword(credentialsId: 'af539a9b-b67e-41d7-9179-5519fee65c6d', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    script {
                        env.encodedPass=URLEncoder.encode(PASS, "UTF-8")
                    }
                    dir('ops'){
                       sh 'git clone https://${USER}:${encodedPass}@github.com/rattisyam/GitOpsRepo.git master'
                       sh "cd master && yq e '.image.tag = \"s-$tag\"' -i ./nodejs/values.staging.yaml && git add . && git commit -m 'updated tag \"$tag\"' && git push origin master" 
                    }
                }
   
   }

}
